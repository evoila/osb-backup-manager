{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "backup-controller",
      "description": "Create a new request in the job repository (RabbitMQ), which can be either a backup job by sending a BackupPlan or a restore job. Jobs are scheduled to be processed by this Backup-Manager."
    },
    {
      "name": "backup-job-controller",
      "description": "Get or delete backup jobs from the job repository (MongoDB), which are or have been processed by the Backup Agent."
    },
    {
      "name": "backup-plan-controller",
      "description": "Manage individual BackupPlans or BackupPlans grouped by service instances."
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    },
    {
      "name": "destination-controller",
      "description": "Manage where backup files should be stored by defining destinations."
    },
    {
      "name": "restore-job-controller",
      "description": "Restores backup jobs from the JobRepository (e.g. MongoDB)."
    }
  ],
  "paths": {
    "/backup": {
      "post": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Add a new backup request to the queue. The backup will be executed asynchronously at the scheduled interval as a job.",
        "operationId": "backupUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "backupRequest",
            "description": "backupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/backupJobs/byInstance/{instanceId}": {
      "get": {
        "tags": [
          "backup-job-controller"
        ],
        "summary": "Gets a page of jobs for the specified service instance.",
        "operationId": "allUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«AbstractJob»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/backupJobs/byInstance/{instanceId}/filtered": {
      "get": {
        "tags": [
          "backup-job-controller"
        ],
        "summary": "Gets a page of jobs for the specified service instance, filtered by their JobStatus.",
        "operationId": "allFilteredUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobStatus",
            "in": "query",
            "description": "jobStatus",
            "required": true,
            "type": "string",
            "enum": [
              "FAILED",
              "RUNNING",
              "STARTED",
              "SUCCEEDED",
              "UNKNOWN"
            ]
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«AbstractJob»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/backupJobs/byInstance/{serviceInstanceId}": {
      "delete": {
        "tags": [
          "backup-job-controller"
        ],
        "summary": "Deletes all jobs from the specified service instance.",
        "operationId": "deleteByInstanceUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceInstanceId",
            "in": "path",
            "description": "serviceInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/backupJobs/{jobId}": {
      "get": {
        "tags": [
          "backup-job-controller"
        ],
        "summary": "Gets a job from the repository.",
        "operationId": "getUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractJob"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "backup-job-controller"
        ],
        "summary": "Deletes a job from the repository.",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/backupJobs/{jobId}/file": {
      "delete": {
        "tags": [
          "backup-job-controller"
        ],
        "summary": "Delete the file backed up by this job.",
        "operationId": "deleteFileUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "destination",
            "description": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileDestinationReq"
            }
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/backupPlans": {
      "post": {
        "tags": [
          "backup-plan-controller"
        ],
        "summary": "Save the BackupPlan in the repository and add it as a task in the scheduling service if not paused. The task will periodically add backup jobs to the queue, as is configured in the BackupPlan.",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "plan",
            "description": "plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupPlanReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupPlanRes"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/backupPlans/byInstance/{instanceId}": {
      "get": {
        "tags": [
          "backup-plan-controller"
        ],
        "summary": "Get all BackupPlan from the specified service instance.",
        "operationId": "allUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«BackupPlan»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/backupPlans/byInstance/{serviceInstanceId}": {
      "delete": {
        "tags": [
          "backup-plan-controller"
        ],
        "summary": "Delete all BackupPlans, running tasks from the repository and scheduling service.",
        "operationId": "deleteByInstanceUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceInstanceId",
            "in": "path",
            "description": "serviceInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/backupPlans/{planId}": {
      "get": {
        "tags": [
          "backup-plan-controller"
        ],
        "summary": "Get the BackupPlan from the repository specified by its ID.",
        "operationId": "getUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "planId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupPlanRes"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "backup-plan-controller"
        ],
        "summary": "Delete the BackupPlan and running task from the repository and scheduling service.",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "planId",
            "in": "path",
            "description": "planId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupPlanRes"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "backup-plan-controller"
        ],
        "summary": "Update BackupPlan, running task and deletes old backup files & jobs exceeding the retention period specified in the BackupPlan.",
        "operationId": "updateUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "plan",
            "description": "plan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupPlanReq"
            }
          },
          {
            "name": "planId",
            "in": "path",
            "description": "planId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupPlanRes"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fileDestinations": {
      "post": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Create a new S3 destination, specifying where backups should be stored for a specific instance.",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "destination",
            "description": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileDestinationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileDestinationRes"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fileDestinations/byInstance/{instanceId}": {
      "get": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Get a page of destinations configured on the given instance.",
        "operationId": "allUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«FileDestination»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fileDestinations/byInstance/{serviceInstanceId}": {
      "delete": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Delete all destinations configured on the given instance.",
        "operationId": "deleteByInstanceUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceInstanceId",
            "in": "path",
            "description": "serviceInstanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fileDestinations/validate": {
      "post": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Check if a backup can be stored in the given destination.",
        "operationId": "validateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "destination",
            "description": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileDestinationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fileDestinations/{destinationId}": {
      "get": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Get the specified destination from the repository.",
        "operationId": "getUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "destinationId",
            "in": "path",
            "description": "destinationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileDestinationRes"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Delete a destination with the given ID.",
        "operationId": "deleteUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "destinationId",
            "in": "path",
            "description": "destinationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "destination-controller"
        ],
        "summary": "Update an existing destination with new configurations.",
        "operationId": "updateUsingPATCH_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "destination",
            "description": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileDestinationReq"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "description": "destinationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileDestinationRes"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/restore": {
      "post": {
        "tags": [
          "backup-controller"
        ],
        "summary": "Add a new restore request to the queue. The restore will be executed asynchronously at the scheduled interval as a job.",
        "operationId": "restoreUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restoreRequest",
            "description": "restoreRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/restoreJobs/byInstance/{instanceId}": {
      "get": {
        "tags": [
          "restore-job-controller"
        ],
        "summary": "Gets a page of configured jobs for the specified service instance.",
        "operationId": "allUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "instanceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«AbstractJob»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/restoreJobs/{jobId}": {
      "get": {
        "tags": [
          "restore-job-controller"
        ],
        "summary": "Gets a job with the given id from the repository.",
        "operationId": "getUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractJob"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "AbstractJob": {
      "type": "object",
      "discriminator": "jobType",
      "properties": {
        "agentExecutionReponses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AgentExecutionResponse"
          }
        },
        "backupPlan": {
          "$ref": "#/definitions/BackupPlan"
        },
        "destination": {
          "$ref": "#/definitions/FileDestination"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "idAsString": {
          "type": "string"
        },
        "jobLogs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jobType": {
          "type": "string",
          "enum": [
            "BACKUP",
            "RESTORE"
          ]
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "FAILED",
            "RUNNING",
            "STARTED",
            "SUCCEEDED",
            "UNKNOWN"
          ]
        }
      },
      "title": "AbstractJob"
    },
    "AgentExecutionResponse": {
      "type": "object",
      "properties": {
        "end_time": {
          "type": "string",
          "format": "date-time"
        },
        "error_message": {
          "type": "string"
        },
        "execution_time_ms": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "start_time": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "FAILED",
            "RUNNING",
            "STARTED",
            "SUCCEEDED",
            "UNKNOWN"
          ]
        }
      },
      "title": "AgentExecutionResponse"
    },
    "BackupJob": {
      "title": "BackupJob",
      "allOf": [
        {
          "$ref": "#/definitions/AbstractJob"
        },
        {
          "type": "object",
          "properties": {
            "agentExecutionReponses": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AgentExecutionResponse"
              }
            },
            "backupPlan": {
              "$ref": "#/definitions/BackupPlan"
            },
            "destination": {
              "$ref": "#/definitions/FileDestination"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            },
            "files": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "$ref": "#/definitions/ObjectId"
            },
            "idAsString": {
              "type": "string"
            },
            "jobLogs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobType": {
              "type": "string",
              "enum": [
                "BACKUP",
                "RESTORE"
              ]
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "status": {
              "type": "string",
              "enum": [
                "FAILED",
                "RUNNING",
                "STARTED",
                "SUCCEEDED",
                "UNKNOWN"
              ]
            }
          },
          "title": "BackupJob"
        }
      ]
    },
    "BackupPlan": {
      "type": "object",
      "properties": {
        "compression": {
          "type": "boolean"
        },
        "fileDestination": {
          "$ref": "#/definitions/FileDestination"
        },
        "frequency": {
          "type": "string",
          "pattern": "^\\s*($|#|\\w+\\s*=|((\\?|\\*|(?:[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:(\\*|[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+((\\?|\\*|(?:[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:(\\*|[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+((\\?|\\*|(?:[01]?\\d|2[0-3]))(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:(\\*|[01]?\\d|2[0-3]))(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+((\\?|\\*|(?:0?[1-9]|[12]\\d|3[01]))(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:(\\*|0?[1-9]|[12]\\d|3[01]))(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+((\\?|\\*|(?:[1-9]|1[012]))(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:(\\*|[1-9]|1[012]))(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+((\\?|\\*|(?:[0-6]))(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:(\\*|[0-6]))(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?)*))$"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "idAsString": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "paused": {
          "type": "boolean"
        },
        "privateKey": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "retentionPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "retentionStyle": {
          "type": "string",
          "enum": [
            "ALL",
            "DAYS",
            "FILES",
            "HOURS"
          ]
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "BackupPlan"
    },
    "BackupPlanReq": {
      "type": "object",
      "properties": {
        "compression": {
          "type": "boolean"
        },
        "fileDestination": {
          "$ref": "#/definitions/FileDestinationReq"
        },
        "frequency": {
          "type": "string",
          "pattern": "^\\s*($|#|\\w+\\s*=|((\\?|\\*|(?:[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:(\\*|[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+((\\?|\\*|(?:[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:(\\*|[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+((\\?|\\*|(?:[01]?\\d|2[0-3]))(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:(\\*|[01]?\\d|2[0-3]))(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+((\\?|\\*|(?:0?[1-9]|[12]\\d|3[01]))(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:(\\*|0?[1-9]|[12]\\d|3[01]))(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+((\\?|\\*|(?:[1-9]|1[012]))(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:(\\*|[1-9]|1[012]))(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+((\\?|\\*|(?:[0-6]))(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:(\\*|[0-6]))(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?)*))$"
        },
        "id": {
          "$ref": "#/definitions/ObjectIdReq"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "paused": {
          "type": "boolean"
        },
        "privateKey": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "retentionPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "retentionStyle": {
          "type": "string",
          "enum": [
            "ALL",
            "DAYS",
            "FILES",
            "HOURS"
          ]
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "BackupPlanReq"
    },
    "BackupPlanRes": {
      "type": "object",
      "properties": {
        "compression": {
          "type": "boolean"
        },
        "fileDestination": {
          "$ref": "#/definitions/FileDestinationRes"
        },
        "frequency": {
          "type": "string",
          "pattern": "^\\s*($|#|\\w+\\s*=|((\\?|\\*|(?:[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:(\\*|[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+((\\?|\\*|(?:[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?(?:,(?:(\\*|[0-5]?\\d))(?:(?:-|\/|\\,)(?:[0-5]?\\d))?)*)\\s+((\\?|\\*|(?:[01]?\\d|2[0-3]))(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:(\\*|[01]?\\d|2[0-3]))(?:(?:-|\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+((\\?|\\*|(?:0?[1-9]|[12]\\d|3[01]))(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:(\\*|0?[1-9]|[12]\\d|3[01]))(?:(?:-|\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+((\\?|\\*|(?:[1-9]|1[012]))(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:(\\*|[1-9]|1[012]))(?:(?:-|\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+((\\?|\\*|(?:[0-6]))(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?(?:,(?:(\\*|[0-6]))(?:(?:-|\/|\\,|#)(?:[0-6]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\/|\\,)(?:|\\d{4}))?)*))$"
        },
        "id": {
          "$ref": "#/definitions/ObjectIdRes"
        },
        "idAsString": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "paused": {
          "type": "boolean"
        },
        "privateKey": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "retentionPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "retentionStyle": {
          "type": "string",
          "enum": [
            "ALL",
            "DAYS",
            "FILES",
            "HOURS"
          ]
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "BackupPlanRes"
    },
    "BackupRequest": {
      "type": "object",
      "properties": {
        "backupPlan": {
          "$ref": "#/definitions/BackupPlan"
        }
      },
      "title": "BackupRequest"
    },
    "Context": {
      "type": "object",
      "properties": {
        "clusterid": {
          "type": "string"
        },
        "instance_name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "organization_guid": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "space_guid": {
          "type": "string"
        },
        "space_name": {
          "type": "string"
        }
      },
      "title": "Context"
    },
    "FileDestination": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "filename": {
          "type": "string"
        },
        "filenamePrefix": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ObjectId"
        },
        "idAsString": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "type": {
          "type": "string",
          "enum": [
            "S3",
            "SWIFT"
          ]
        },
        "username": {
          "type": "string"
        }
      },
      "title": "FileDestination"
    },
    "FileDestinationReq": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "filename": {
          "type": "string"
        },
        "filenamePrefix": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ObjectIdReq"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "type": {
          "type": "string",
          "enum": [
            "S3",
            "SWIFT"
          ]
        },
        "username": {
          "type": "string"
        }
      },
      "title": "FileDestinationReq"
    },
    "FileDestinationRes": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "filename": {
          "type": "string"
        },
        "filenamePrefix": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ObjectIdRes"
        },
        "idAsString": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "serviceInstance": {
          "$ref": "#/definitions/ServiceInstance"
        },
        "type": {
          "type": "string",
          "enum": [
            "S3",
            "SWIFT"
          ]
        },
        "username": {
          "type": "string"
        }
      },
      "title": "FileDestinationRes"
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      },
      "title": "ModelAndView"
    },
    "ObjectId": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "timestamp": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ObjectId"
    },
    "ObjectIdReq": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ObjectIdReq"
    },
    "ObjectIdRes": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "timestamp": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ObjectIdRes"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      },
      "title": "Pageable"
    },
    "Page«AbstractJob»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractJob"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«AbstractJob»"
    },
    "Page«BackupPlan»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupPlanRes"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«BackupPlan»"
    },
    "Page«FileDestination»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDestinationRes"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«FileDestination»"
    },
    "RequestDetails": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "item": {
          "type": "string"
        }
      },
      "title": "RequestDetails"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "ACCEPTED",
            "ALREADY_REPORTED",
            "BAD_GATEWAY",
            "BAD_REQUEST",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "CHECKPOINT",
            "CONFLICT",
            "CONTINUE",
            "CREATED",
            "DESTINATION_LOCKED",
            "EXPECTATION_FAILED",
            "FAILED_DEPENDENCY",
            "FORBIDDEN",
            "FOUND",
            "GATEWAY_TIMEOUT",
            "GONE",
            "HTTP_VERSION_NOT_SUPPORTED",
            "IM_USED",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "INSUFFICIENT_STORAGE",
            "INTERNAL_SERVER_ERROR",
            "I_AM_A_TEAPOT",
            "LENGTH_REQUIRED",
            "LOCKED",
            "LOOP_DETECTED",
            "METHOD_FAILURE",
            "METHOD_NOT_ALLOWED",
            "MOVED_PERMANENTLY",
            "MOVED_TEMPORARILY",
            "MULTIPLE_CHOICES",
            "MULTI_STATUS",
            "NETWORK_AUTHENTICATION_REQUIRED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NOT_ACCEPTABLE",
            "NOT_EXTENDED",
            "NOT_FOUND",
            "NOT_IMPLEMENTED",
            "NOT_MODIFIED",
            "NO_CONTENT",
            "OK",
            "PARTIAL_CONTENT",
            "PAYLOAD_TOO_LARGE",
            "PAYMENT_REQUIRED",
            "PERMANENT_REDIRECT",
            "PRECONDITION_FAILED",
            "PRECONDITION_REQUIRED",
            "PROCESSING",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "REQUEST_ENTITY_TOO_LARGE",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "REQUEST_TIMEOUT",
            "REQUEST_URI_TOO_LONG",
            "RESET_CONTENT",
            "SEE_OTHER",
            "SERVICE_UNAVAILABLE",
            "SWITCHING_PROTOCOLS",
            "TEMPORARY_REDIRECT",
            "TOO_EARLY",
            "TOO_MANY_REQUESTS",
            "UNAUTHORIZED",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "UNPROCESSABLE_ENTITY",
            "UNSUPPORTED_MEDIA_TYPE",
            "UPGRADE_REQUIRED",
            "URI_TOO_LONG",
            "USE_PROXY",
            "VARIANT_ALSO_NEGOTIATES"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "RestoreJob": {
      "title": "RestoreJob",
      "allOf": [
        {
          "$ref": "#/definitions/AbstractJob"
        },
        {
          "type": "object",
          "properties": {
            "agentExecutionReponses": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/AgentExecutionResponse"
              }
            },
            "backupPlan": {
              "$ref": "#/definitions/BackupPlan"
            },
            "destination": {
              "$ref": "#/definitions/FileDestination"
            },
            "endDate": {
              "type": "string",
              "format": "date-time"
            },
            "id": {
              "$ref": "#/definitions/ObjectId"
            },
            "idAsString": {
              "type": "string"
            },
            "jobLogs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobType": {
              "type": "string",
              "enum": [
                "BACKUP",
                "RESTORE"
              ]
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "startDate": {
              "type": "string",
              "format": "date-time"
            },
            "status": {
              "type": "string",
              "enum": [
                "FAILED",
                "RUNNING",
                "STARTED",
                "SUCCEEDED",
                "UNKNOWN"
              ]
            }
          },
          "title": "RestoreJob"
        }
      ]
    },
    "RestoreRequest": {
      "type": "object",
      "properties": {
        "backupJob": {
          "$ref": "#/definitions/BackupJob"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestDetails"
          }
        }
      },
      "title": "RestoreRequest"
    },
    "S3FileDestination": {
      "title": "S3FileDestination",
      "allOf": [
        {
          "$ref": "#/definitions/FileDestination"
        },
        {
          "type": "object",
          "properties": {
            "authKey": {
              "type": "string"
            },
            "authSecret": {
              "type": "string"
            },
            "bucket": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filenamePrefix": {
              "type": "string"
            },
            "id": {
              "$ref": "#/definitions/ObjectId"
            },
            "idAsString": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "skipSSL": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "S3",
                "SWIFT"
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "title": "S3FileDestination"
        }
      ]
    },
    "S3FileDestinationReq": {
      "title": "S3FileDestination",
      "allOf": [
        {
          "$ref": "#/definitions/FileDestinationReq"
        },
        {
          "type": "object",
          "properties": {
            "authKey": {
              "type": "string"
            },
            "authSecret": {
              "type": "string"
            },
            "bucket": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filenamePrefix": {
              "type": "string"
            },
            "id": {
              "$ref": "#/definitions/ObjectIdReq"
            },
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "skipSSL": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "S3",
                "SWIFT"
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "title": "S3FileDestinationReq"
        }
      ]
    },
    "S3FileDestinationRes": {
      "title": "S3FileDestination",
      "allOf": [
        {
          "$ref": "#/definitions/FileDestinationRes"
        },
        {
          "type": "object",
          "properties": {
            "authKey": {
              "type": "string"
            },
            "authSecret": {
              "type": "string"
            },
            "bucket": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filenamePrefix": {
              "type": "string"
            },
            "id": {
              "$ref": "#/definitions/ObjectIdRes"
            },
            "idAsString": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "skipSSL": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "S3",
                "SWIFT"
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "title": "S3FileDestinationRes"
        }
      ]
    },
    "ServerAddress": {
      "type": "object",
      "properties": {
        "backup": {
          "type": "boolean"
        },
        "ip": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ServerAddress"
    },
    "ServiceInstance": {
      "type": "object",
      "properties": {
        "allow_context_updates": {
          "type": "boolean"
        },
        "context": {
          "$ref": "#/definitions/Context"
        },
        "floatingIp_id": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerAddress"
          }
        },
        "internal_id": {
          "type": "string"
        },
        "organization_guid": {
          "type": "string"
        },
        "parameters": {
          "type": "object"
        },
        "plan_id": {
          "type": "string"
        },
        "service_id": {
          "type": "string"
        },
        "service_instance_id": {
          "type": "string"
        },
        "space_guid": {
          "type": "string"
        }
      },
      "title": "ServiceInstance"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      },
      "title": "Sort"
    },
    "SwiftFileDestination": {
      "title": "SwiftFileDestination",
      "allOf": [
        {
          "$ref": "#/definitions/FileDestination"
        },
        {
          "type": "object",
          "properties": {
            "authUrl": {
              "type": "string"
            },
            "container_name": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filenamePrefix": {
              "type": "string"
            },
            "id": {
              "$ref": "#/definitions/ObjectId"
            },
            "idAsString": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "project_name": {
              "type": "string"
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "type": {
              "type": "string",
              "enum": [
                "S3",
                "SWIFT"
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "title": "SwiftFileDestination"
        }
      ]
    },
    "SwiftFileDestinationReq": {
      "title": "SwiftFileDestination",
      "allOf": [
        {
          "$ref": "#/definitions/FileDestinationReq"
        },
        {
          "type": "object",
          "properties": {
            "authUrl": {
              "type": "string"
            },
            "container_name": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filenamePrefix": {
              "type": "string"
            },
            "id": {
              "$ref": "#/definitions/ObjectIdReq"
            },
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "project_name": {
              "type": "string"
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "type": {
              "type": "string",
              "enum": [
                "S3",
                "SWIFT"
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "title": "SwiftFileDestinationReq"
        }
      ]
    },
    "SwiftFileDestinationRes": {
      "title": "SwiftFileDestination",
      "allOf": [
        {
          "$ref": "#/definitions/FileDestinationRes"
        },
        {
          "type": "object",
          "properties": {
            "authUrl": {
              "type": "string"
            },
            "container_name": {
              "type": "string"
            },
            "domain": {
              "type": "string"
            },
            "filename": {
              "type": "string"
            },
            "filenamePrefix": {
              "type": "string"
            },
            "id": {
              "$ref": "#/definitions/ObjectIdRes"
            },
            "idAsString": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "project_name": {
              "type": "string"
            },
            "serviceInstance": {
              "$ref": "#/definitions/ServiceInstance"
            },
            "type": {
              "type": "string",
              "enum": [
                "S3",
                "SWIFT"
              ]
            },
            "username": {
              "type": "string"
            }
          },
          "title": "SwiftFileDestinationRes"
        }
      ]
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      },
      "title": "View"
    }
  }
}